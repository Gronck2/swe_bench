{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-11693-v2",
  "base_commit": "3832210580d516365ddae1a62071001faf94d416",
  "patch": "diff --git a/astropy/wcs/wcsapi/fitswcs.py b/astropy/wcs/wcsapi/fitswcs.py\n--- a/astropy/wcs/wcsapi/fitswcs.py\n+++ b/astropy/wcs/wcsapi/fitswcs.py\n@@ -323,7 +323,18 @@ def pixel_to_world_values(self, *pixel_arrays):\n         return world[0] if self.world_n_dim == 1 else tuple(world)\n \n     def world_to_pixel_values(self, *world_arrays):\n-        pixel = self.all_world2pix(*world_arrays, 0)\n+        # avoid circular import\n+        from astropy.wcs.wcs import NoConvergence\n+        import warnings\n+        try:\n+            pixel = self.all_world2pix(*world_arrays, 0)\n+        except NoConvergence as e:\n+            warnings.warn(str(e))\n+            # use best_solution contained in the exception and format the same\n+            # way as all_world2pix does (using _array_converter)\n+            pixel = self._array_converter(lambda *args: e.best_solution,\n+                                         'input', *world_arrays, 0)\n+\n         return pixel[0] if self.pixel_n_dim == 1 else tuple(pixel)\n \n     @property\n",
  "test_patch": "diff --git a/astropy/wcs/wcsapi/tests/test_fitswcs.py b/astropy/wcs/wcsapi/tests/test_fitswcs.py\n--- a/astropy/wcs/wcsapi/tests/test_fitswcs.py\n+++ b/astropy/wcs/wcsapi/tests/test_fitswcs.py\n@@ -19,7 +19,7 @@\n from astropy.io.fits.verify import VerifyWarning\n from astropy.units.core import UnitsWarning\n from astropy.utils.data import get_pkg_data_filename\n-from astropy.wcs.wcs import WCS, FITSFixedWarning\n+from astropy.wcs.wcs import WCS, FITSFixedWarning, Sip, NoConvergence\n from astropy.wcs.wcsapi.fitswcs import custom_ctype_to_ucd_mapping, VELOCITY_FRAMES\n from astropy.wcs._wcs import __version__ as wcsver\n from astropy.utils import iers\n@@ -1067,3 +1067,33 @@ def test_different_ctypes(header_spectral_frames, ctype3, observer):\n             pix = wcs.world_to_pixel(skycoord, spectralcoord)\n \n     assert_allclose(pix, [0, 0, 31], rtol=1e-6)\n+\n+\n+def test_non_convergence_warning_v2():\n+    \"\"\"Test case for issue #11446 - variant 2\n+    Since we can't define a target accuracy when plotting a WCS `all_world2pix`\n+    should not error but only warn when the default accuracy can't be reached.\n+    \"\"\"\n+    # define a minimal WCS where convergence fails for certain image positions\n+    wcs = WCS(naxis=2)\n+    crpix = [0, 0]\n+    a = b = ap = bp = np.zeros((4, 4))\n+    a[3, 0] = -1.20116753e-07\n+\n+    test_pos_x = [1000, 1]\n+    test_pos_y = [0, 2]\n+\n+    wcs.sip = Sip(a, b, ap, bp, crpix)\n+    # first make sure the WCS works when using a low accuracy\n+    expected = wcs.all_world2pix(test_pos_x, test_pos_y, 0, tolerance=1e-3)\n+\n+    # then check that it fails when using the default accuracy\n+    with pytest.raises(NoConvergence):\n+        wcs.all_world2pix(test_pos_x, test_pos_y, 0)\n+\n+    # at last check that world_to_pixel_values raises a warning but returns\n+    # the same 'low accuray' result\n+    import warnings\n+    with warnings.catch_warnings(record=True) as w:\n+        result = wcs.world_to_pixel_values(test_pos_x, test_pos_y)\n+        assert len(w) > 0  # Check that a warning was issued\n",
  "problem_statement": "'WCS.all_world2pix' failed to converge when plotting WCS with non linear distortions - enhanced warning handling\n\n### Description\nWhen trying to plot an image with a WCS as projection that contains non linear distortions it fails with a `NoConvergence` error. This is an enhanced version of the fix that includes explicit warnings import.\n\n### Expected behavior\nThe system should warn about convergence issues but continue with best available solution.\n\n### Actual behavior\nThe call to plotting the grid fails with NoConvergence exception.\n\n### System Information\nAstropy 4.2\nPython 3.9",
  "hints_text": "The enhanced fix adds explicit warnings import and improved warning handling for NoConvergence exceptions in world_to_pixel_values method.",
  "created_at": "2021-05-04T10:05:33Z",
  "version": "4.2",
  "FAIL_TO_PASS": "[\"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_non_convergence_warning_v2\"]",
  "PASS_TO_PASS": "[\"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_empty\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_simple_celestial\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values[tai]\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values[tcb]\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values[tcg]\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values[tdb]\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values[tt]\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values[ut1]\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values[utc]\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values[local]\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values_gps\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values_deprecated\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_values_time\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_high_precision\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_location_geodetic\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_location_geocentric\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_location_geocenter\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_location_missing\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_location_incomplete\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_location_unsupported\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_time_1d_unsupported_ctype\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_unrecognized_unit\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_distortion_correlations\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_custom_ctype_to_ucd_mappings\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_caching_components_and_classes\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_sub_wcsapi_attributes\", \"astropy/wcs/wcsapi/tests/test_fitswcs.py::test_phys_type_polarization\"]",
  "environment_setup_commit": "3832210580d516365ddae1a62071001faf94d416",
  "_download_metadata": {
    "downloaded_at": "2025-01-15T10:00:00.000000",
    "dataset_name": "SWE-bench/SWE-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}
