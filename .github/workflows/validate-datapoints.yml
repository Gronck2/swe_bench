name: Validate SWE-bench Data Points

on:
  push:
    paths:
      - 'data_points/**'
      - '.github/workflows/validate-datapoints.yml'
  pull_request:
    paths:
      - 'data_points/**'
      - '.github/workflows/validate-datapoints.yml'

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg lsb-release

    - name: Add Docker's official GPG key
      run: |
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

    - name: Set up Docker repository
      run: |
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Install Docker Engine
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Start Docker service
      run: |
        sudo systemctl start docker
        sudo systemctl enable docker

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build SWE-bench environment images
      run: |
        echo "üî® Building SWE-bench environment images..."
        python -c "
        from swebench.harness.docker_build import build_env_images
        import docker
        import os

        client = docker.from_env()

        # Build environment images for common Python versions
        env_names = ['py310', 'py311']

        for env_name in env_names:
            try:
                print(f'üî® Building environment image: sweb.env.{env_name}.x86_64...')
                # Use SWE-bench's build_env_images function
                build_env_images(
                    env_names=[env_name],
                    client=client,
                    nocache=False
                )
                print(f'‚úÖ Environment {env_name} built successfully')
            except Exception as e:
                print(f'‚ö†Ô∏è  Could not build {env_name}: {e}')

        print('üéâ Environment images setup completed')
        "

    - name: Verify environment images
      run: |
        echo "üîç Verifying environment images..."
        if docker images | grep -q sweb.env; then
          echo "‚úÖ SWE-bench environment images found"
          docker images | grep sweb.env
        else
          echo "‚ö†Ô∏è  No SWE-bench environment images found - will use base cache level"
          echo "SWE_BENCH_CACHE_LEVEL=base" >> $GITHUB_ENV
        fi

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v40
      with:
        files: data_points/**.json
        separator: '\n'

    - name: Validate data points
      if: steps.changed-files.outputs.any_changed == 'true'
      env:
        CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        echo "üîç Validating changed data points..."
        echo "Changed files:"
        echo "$CHANGED_FILES"
        echo ""

        # Run validation script with appropriate cache level
        python scripts/validate_changed.py

    - name: Validation results
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        if [ $? -eq 0 ]; then
          echo "‚úÖ All validations passed!"
        else
          echo "‚ùå Some validations failed!"
          exit 1
        fi

    - name: Upload validation logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: validation-logs
        path: |
          logs/
          *.log
        retention-days: 7

